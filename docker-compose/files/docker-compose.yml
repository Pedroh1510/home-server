---
services:
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${STORAGE}/nextCloud/config:/config
      - ${STORAGE}/nextCloud/data:/data
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.nextcloud-secure.entrypoints=websecure
      - traefik.http.routers.nextcloud-secure.rule=Host(`nextcloud.${DOMAIN}`)
      - traefik.http.routers.nextcloud-secure.tls=true
      - traefik.http.routers.nextcloud-secure.tls.certresolver=http
      - traefik.http.routers.nextcloud-secure.service=nextcloud
      - traefik.http.services.nextcloud.loadbalancer.server.port=443
      - traefik.http.services.nextcloud.loadbalancer.server.scheme=https
    healthcheck:
      test: curl --insecure --fail "https://localhost:443/login" || exit 1
      interval: 2m
      retries: 10
      start_period: 10m
      timeout: 5s
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '800m'
    networks:
      - proxy

  snapdrop:
    image: lscr.io/linuxserver/snapdrop:latest
    container_name: snapdrop
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${STORAGE}/snapdrop/config:/config
    # ports:
    #   - 80:80
    #   - 443:443
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.snapdrop-secure.entrypoints=websecure
      - traefik.http.routers.snapdrop-secure.rule=Host(`drop.${DOMAIN}`)
      - traefik.http.routers.snapdrop-secure.tls=true
      - traefik.http.routers.snapdrop-secure.tls.certresolver=http
      - traefik.http.routers.snapdrop-secure.service=snapdrop
      - traefik.http.services.snapdrop.loadbalancer.server.port=443
      - traefik.http.services.snapdrop.loadbalancer.server.scheme=https
    networks:
      - proxy

networks:
  proxy:
    external: true
