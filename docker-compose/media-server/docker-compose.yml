---
networks:
  proxy:
    external: true
  torrent:
    external: true
  mediaServer:

services:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022 #optional
    volumes:
      - ${SSD}/sonarr:/config
      - ${DATA}/tvseries:/tv
      - ${DATA}/downloads:/downloads
      - ${DATA}/downloader/downloads:/downloaders
    # ports:
    #   - 8989:8989
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.30'
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      # - traefik.http.routers.sonarr.entrypoints=web
      - traefik.http.routers.sonarr.entrypoints=websecure
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.docker.network=proxy
    networks:
      - proxy
      - mediaServer
      - torrent

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022 #optional
    volumes:
      - ${SSD}/radarr:/config
      - ${DATA}/movies:/movies
      - ${DATA}/downloads:/downloads
      - ${DATA}/downloader:/downloaders
    # ports:
    #   - 7878:7878
    deploy:
      resources:
        limits:
          cpus: '0.30'
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.entrypoints=websecure
      - traefik.http.routers.radarr.tls=true
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.docker.network=proxy
    networks:
      - proxy
      - mediaServer
      - torrent

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${SSD}/jellyfin:/config
      - ${DATA}/movies:/data/movies
      - ${DATA}/tvseries:/data/tvshows
      - ${DATA}/music:/data/music
      - ${DATA}/mangas:/data/mangas
      - ${DATA}/downloader/downloads:/downloaders
    ports:
      - 8096:8096
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.${DOMAIN}`)
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin.entrypoints=websecure
      - traefik.http.routers.jellyfin.tls=true
      - traefik.docker.network=proxy
    networks:
      - proxy
      - mediaServer

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${SSD}/lidarr:/config
      - ${DATA}/downloads:/downloads
      - ${DATA}/music:/music
    ports:
      - 8686:8686
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)
      - traefik.http.routers.lidarr.entrypoints=websecure
      - traefik.http.routers.lidarr.tls=true
      - traefik.http.services.lidarr.loadbalancer.server.port=8686
      - traefik.docker.network=proxy
    networks:
      - proxy
      - torrent
      - mediaServer

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true #optional
    # ports:
    #   - 9117:9117
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)
      - traefik.http.routers.jackett.entrypoints=websecure
      - traefik.http.routers.jackett.tls=true
      - traefik.http.services.jackett.loadbalancer.server.port=9117
      - traefik.docker.network=proxy
    networks:
      - proxy
      - mediaServer
